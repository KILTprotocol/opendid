on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release version (e.g., 1.0.0)"
        required: true

name: Prod deployment

jobs:
  deploy:
    name: Build images and publish them
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Protoc
      uses: arduino/setup-protoc@v2

    - name: Build image
      run: |
        make images

    - name: Login to Docker Hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.REPO_ACCESS_TOKEN }}
      run: |
        echo -n $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin docker.io

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Tag and push image
      env:
        REGISTRY: kiltprotocol
        REPOSITORY_BASE: opendid
        IMAGE_TAG: v${{ github.event.inputs.tag }}
      run: |
        docker tag docker.io/kiltprotocol/opendid:latest ${REGISTRY}/${REPOSITORY_BASE}:${IMAGE_TAG}
        docker tag docker.io/kiltprotocol/opendid-demo:latest ${REGISTRY}/${REPOSITORY_BASE}-demo:${IMAGE_TAG}
        docker tag docker.io/kiltprotocol/opendid-setup:latest ${REGISTRY}/${REPOSITORY_BASE}-setup:${IMAGE_TAG}
        docker tag ${REGISTRY}/${REPOSITORY_BASE}:${IMAGE_TAG} ${REGISTRY}/${REPOSITORY_BASE}:latest
        docker tag ${REGISTRY}/${REPOSITORY_BASE}-demo:${IMAGE_TAG} ${REGISTRY}/${REPOSITORY_BASE}-demo:latest
        docker tag ${REGISTRY}/${REPOSITORY_BASE}-setup:${IMAGE_TAG} ${REGISTRY}/${REPOSITORY_BASE}-setup:latest
        docker push ${REGISTRY}/${REPOSITORY_BASE}:${IMAGE_TAG}
        docker push ${REGISTRY}/${REPOSITORY_BASE}-demo:${IMAGE_TAG}
        docker push ${REGISTRY}/${REPOSITORY_BASE}-setup:${IMAGE_TAG}
        docker push ${REGISTRY}/${REPOSITORY_BASE}:latest
        docker push ${REGISTRY}/${REPOSITORY_BASE}-demo:latest
        docker push ${REGISTRY}/${REPOSITORY_BASE}-setup:latest

    - name: Deploy to kilt cluster
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kilt/indexer
        IMAGE_TAG: v${{ github.event.inputs.tag }}

      with:
        args: rollout restart deployment opendid-deployment -n opendid
